[SecureDB]
min_size.int = 1
max_size.int = 1
#max_inactive_connection_lifetime.float = 30.0
host = localhost
port = 5432
database = database
user = user
password = password


[SupportDB]
min_size.int = 1
max_size.int = 1
#max_inactive_connection_lifetime.float = 30.0
host = localhost
port = 5432
database = database
user = user
password = password


[Crypto]
KeyEncryptionKey.fromfile.configrelative = kek2.txt


[Queue]
AdminKey = QueueAdminKey
HTTPPort = 18080
SchedulingBatch.int = 10
SchedulingIdleDelay.int = 1
EncryptionKeyRenewalLimit.int = 3
EncryptionKeyRenewalPeriod.int = 30
TransactionStallSeconds.int = 3600
TransactionOldSeconds.int = 5356800
UserCancelKey = some_long_secret_string
RecurrentMaxFailCount.int = 5


[BankAPI]
BaseURL = http://127.0.0.1:8082/

UseProductionTerminals.int = 0

# Список gate'ов (через запятую) для которых нужно выполнять
# потерминальное закрытие дня
CloseDayGates = brs,maib

# Количество попыток закрытия для каждого из терминалов. При
# превышении - отказ от дальнейших попыток.
CloseDayTryLimit.int = 2


[AntiFraud]
BaseURL = http://127.0.0.1:8083
Use3DSAuthentication.bool = True


[QueueCelery]
broker_url = amqp://guest:guest@localhost:5672/queue
beat_scheduler = redisbeat.RedisScheduler
result_backend = disabled://
#worker_concurrency = 10
backend = redis://localhost:6379/1
CELERY_REDIS_SCHEDULER_URL = redis://localhost:6379/1
CELERY_REDIS_SCHEDULER_KEY_PREFIX = celery:beat:order_tasks


[Redis]
address = redis://localhost:6379/0


[AsyncWorkerCelery]
main = spg.async_worker
include.split = spg.async_worker.webhooks:spg.async_worker.spirit:spg.async_worker.anti_fraud

[AsyncWorkerCelery:changes]
broker_url = amqp://async_user:async_password@localhost/async
result_backend = disabled://
broker_pool_limit.int = 10
broker_heartbeat.int = 120
broker_connection_timeout.int = 4
worker_prefetch_multiplier.int = 4
task_serializer = json
accept_content.split = json

[AsyncWorkerCelery:changes:task_publish_retry_policy]
max_retries.int = 3
interval_start.float = 0.0
interval_step.float = 0.2
interval_max.float = 1.0

[AsyncWorkerCelery:changes:broker_transport_options]
confirm_publish.bool = True
connect_timeout.int = 4
read_timeout.int = 5
write_timeout.int = 5

[AsyncWorkerCelery:changes:task_routes:spg.async_worker.webhooks.*]
queue = webhooks

[AsyncWorkerCelery:changes:task_routes:spg.async_worker.spirit.*]
queue = spirit

[AsyncWorkerCelery:changes:task_routes:spg.async_worker.anti_fraud.*]
queue = anti_fraud


[AsyncTasks]
IdleDelay.int = 1000
SchedulingBaseDelay.int = 60
MaxRetryCount.int = 8
SchedulingPower.float = 3.36
UseLegacyWebhooks.bool = True


[CeleryFailFast]
# Смысл настроек в следующем:
# Если за предыдущие fail_window минут не удалось добавить задачу в очередь
# больше fail_limit раз, то следующие ban_duration минут не будет попыток
# добавлять задачи в очередь и будет выброшен FailFastError.

is_enabled.bool = True

[CeleryFailFast:Helper]
fail_limit.int = 5
fail_window.int = 2
ban_duration.int = 10


[Spirit]
IsEnabled = True


[PartnerWebhook]
IsEnabled.bool = True


[KKDaemon]
pname = /run/spg/kkdaemon.socket
authkey = IDKFA
user = spg-daemons
group = spg-daemons

[DB]
check_timeout.int = 5
